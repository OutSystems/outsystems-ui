<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="206px" preserveAspectRatio="none" style="width:303px;height:206px;background:#CED4DA;" version="1.1" viewBox="0 0 303 206" width="303px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="261" x="5" y="19">Dot Executable: /opt/local/bin/dot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="145" x="5" y="35.2969">File does not exist</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="291" x="5" y="51.5938">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="67.8906"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="79" x="5" y="84.1875">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="57" x="5" y="100.4844">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="72" x="5" y="116.7813">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="133.0781"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="17" x="10" y="149.375">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="165.6719"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="227" x="5" y="181.9688">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="198.2656"/><!--MD5=[1ae426cd14a21877bd68fb4affcb08c8]
@startuml
skinparam ClassArrowColor #272b30
skinparam ClassBorderColor #272b30
skinparam ClassBackgroundColor #fff
skinparam BackgroundColor #ced4da
hide empty methods
hide empty fields
abstract class "AbstractProviderPattern<P, C>" {
    #providerEventsManagerInstance : IProviderEventManager
    #_provider : P
    #_providerInfo : ProviderInfo
    #_selfElem : HTMLElement
    #_widgetId : string
    +build() : void
    +changeProperty(propertyName: string, propertyValue: unknown) : void
    +checkAddedProviderEvents() : void
    +checkPendingProviderEvents() : void
    +dispose() : void
    +equalsToID(patternId: string) : boolean
    {abstract} +registerCallback(eventName: string, callback: OSGeneric) : void
    {abstract} +setProviderConfigs(providerConfigs: any) : void
    +setProviderEvent(eventName: string, callback: Generic, uniqueId: string, saveEvent: boolean) : void
    +unsetProviderEvent(eventId: string) : void
    +updateProviderEvents(providerInfo: ProviderInfo) : void
    #finishBuild() : void
    #triggerPlatformEventInitialized(platFormCallback: OSGeneric) : void
    -_getEventIndexFromArray(event: IProviderEvent) : number
    -_handleProviderEventsAPI(eventName: string, callback: Generic, addEvent: boolean, event: IProviderEvent) : void
}
abstract class "AbstractPattern<C>" {
    #_selfElem : HTMLElement
    #_widgetId : string
    -_configs : C
    -_isBuilt : boolean
    -_uniqueId : string
    +build() : void
    +changeProperty(propertyName: string, propertyValue: unknown) : void
    +dispose() : void
    +equalsToID(patternId: string) : boolean
    #finishBuild() : void
    #_unsetCommonHtmlElements() : void
    -_setCommonHtmlElements() : void
}
"AbstractPattern<C>" <|- - "AbstractProviderPattern<P, C>"
interface "IProviderPattern<P>" {
    +isBuilt : boolean
    +provider : P
    +providerInfo : ProviderInfo
    +selfElement : HTMLElement
    +uniqueId : string
    +widgetId : string
    +build() : void
    +changeProperty(propertyName: string, propertyValue: unknown) : void
    +dispose() : void
    +equalsToID(id: string) : boolean
    +registerCallback(eventName: string, callback: OSGeneric) : void
    +setProviderConfigs(newConfigs: any) : void
    +updateProviderEvents(providerInfo: ProviderInfo) : void
}
"IProviderPattern<P>" <|.. "AbstractProviderPattern<P, C>"
abstract class "AbstractCarousel<P, C>" {
    #providerEventsManagerInstance : IProviderEventManager
    #_provider : P
    #_providerInfo : ProviderInfo
    #_selfElem : HTMLElement
    #_widgetId : string
    +build() : void
    +changeProperty(propertyName: string, propertyValue: unknown) : void
    +checkAddedProviderEvents() : void
    +checkPendingProviderEvents() : void
    +dispose() : void
    +equalsToID(patternId: string) : boolean
    {abstract} +goTo(index: number) : void
    {abstract} +next() : void
    {abstract} +previous() : void
    {abstract} +registerCallback(eventName: string, callback: OSGeneric) : void
    {abstract} +setCarouselDirection(direction: string) : void
    {abstract} +setProviderConfigs(providerConfigs: any) : void
    +setProviderEvent(eventName: string, callback: Generic, uniqueId: string, saveEvent: boolean) : void
    {abstract} +toggleDrag(hasDrag: boolean) : void
    +unsetProviderEvent(eventId: string) : void
    {abstract} +updateOnRender() : void
    +updateProviderEvents(providerInfo: ProviderInfo) : void
    #finishBuild() : void
    #triggerPlatformEventInitialized(platFormCallback: OSGeneric) : void
}
"AbstractProviderPattern<P, C>" <|- - "AbstractCarousel<P, C>"
abstract class "AbstractDatePicker<P, C>" {
    #providerEventsManagerInstance : IProviderEventManager
    #_provider : P
    #_providerInfo : ProviderInfo
    #_selfElem : HTMLElement
    #_widgetId : string
    +build() : void
    +changeProperty(propertyName: string, propertyValue: unknown) : void
    +checkAddedProviderEvents() : void
    +checkPendingProviderEvents() : void
    {abstract} +clear() : void
    {abstract} +close() : void
    +dispose() : void
    +equalsToID(patternId: string) : boolean
    {abstract} +open() : void
    {abstract} +registerCallback(eventName: string, callback: OSGeneric) : void
    {abstract} +setLanguage(value: string) : void
    {abstract} +setProviderConfigs(providerConfigs: any) : void
    +setProviderEvent(eventName: string, callback: Generic, uniqueId: string, saveEvent: boolean) : void
    +unsetProviderEvent(eventId: string) : void
    {abstract} +updateInitialDate(date1: string, date2: string) : void
    +updateProviderEvents(providerInfo: ProviderInfo) : void
    #finishBuild() : void
    #triggerPlatformEventInitialized(platFormCallback: OSGeneric) : void
}
"AbstractProviderPattern<P, C>" <|- - "AbstractDatePicker<P, C>"
abstract class "AbstractDropdown<P, C>" {
    #providerEventsManagerInstance : IProviderEventManager
    #_provider : P
    #_providerInfo : ProviderInfo
    #_selfElem : HTMLElement
    #_widgetId : string
    +build() : void
    +changeProperty(propertyName: string, propertyValue: unknown) : void
    +checkAddedProviderEvents() : void
    +checkPendingProviderEvents() : void
    {abstract} +clear() : void
    {abstract} +disable() : void
    +dispose() : void
    {abstract} +enable() : void
    +equalsToID(patternId: string) : boolean
    {abstract} +getSelectedValues() : string
    {abstract} +registerCallback(eventName: string, callback: OSGeneric) : void
    {abstract} +setProviderConfigs(providerConfigs: any) : void
    +setProviderEvent(eventName: string, callback: Generic, uniqueId: string, saveEvent: boolean) : void
    +unsetProviderEvent(eventId: string) : void
    +updateProviderEvents(providerInfo: ProviderInfo) : void
    {abstract} +validation(isValid: boolean, validationMessage: string) : void
    #finishBuild() : void
    #triggerPlatformEventInitialized(platFormCallback: OSGeneric) : void
}
"AbstractProviderPattern<P, C>" <|- - "AbstractDropdown<P, C>"
abstract class "AbstractRangeSlider<P, C>" {
    #providerEventsManagerInstance : IProviderEventManager
    #_provider : P
    #_providerInfo : ProviderInfo
    #_selfElem : HTMLElement
    #_widgetId : string
    +build() : void
    +changeProperty(propertyName: string, propertyValue: unknown) : void
    +checkAddedProviderEvents() : void
    +checkPendingProviderEvents() : void
    +dispose() : void
    +equalsToID(patternId: string) : boolean
    {abstract} +registerCallback(eventName: string, callback: OSGeneric) : void
    {abstract} +setProviderConfigs(providerConfigs: any) : void
    +setProviderEvent(eventName: string, callback: Generic, uniqueId: string, saveEvent: boolean) : void
    {abstract} +setRangeIntervalChangeOnDragEnd() : void
    +unsetProviderEvent(eventId: string) : void
    +updateProviderEvents(providerInfo: ProviderInfo) : void
    #finishBuild() : void
    #triggerPlatformEventInitialized(platFormCallback: OSGeneric) : void
}
"AbstractProviderPattern<P, C>" <|- - "AbstractRangeSlider<P, C>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>