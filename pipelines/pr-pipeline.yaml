resources:
    repositories:
        - repository: outsystems-ui-tests
          type: github
          name: OutSystems/outsystems-ui-tests
          endpoint: OutSystems

trigger: none

pr:
    branches:
        include:
            - '*' # This does not trigger the pipeline

stages:
    - stage: CheckChanges
      displayName: Check changes in repository
      jobs:
          - job: CheckChangesJob
            displayName: 'Check changed files'
            steps:
                - bash: |
                      CHANGED_FILES=$(git diff origin/dev --name-only)
                      echo "Checking for file changes..."
                      declare TAGS

                      for FILE in $CHANGED_FILES
                          do    
                              if [[ $FILE == *"src/scripts/OSFramework/OSUI/Pattern"* || $FILE == *"src/scripts/OutSystems/OSUI/Patterns"* ]]; then
                                  
                                  ELEMENT=$(echo $FILE| cut -d/ -f6) # 6th file name in the file path

                                  if [[ $ELEMENT == *"API.ts"* ]]; then 
                                      ELEMENT=${ELEMENT:0:-6} # cut API.ts from file name
                                  fi

                              fi

                              if [[ $FILE == *"src/scss/04-patterns"* || $FILE == *"src/scripts/Providers/OSUI"* ]]; then
                                  ELEMENT=$(echo $FILE| cut -d/ -f5) # 5th file/folder name in the file path

                                  if [[ $ELEMENT == *".scss"* ]]; then 
                                      ELEMENT=${ELEMENT:1:-5} # cut .scss from file name
                                  fi

                              fi

                              if [[ $FILE == *"src/scss/10-deprecated"* ]]; then
                                  ELEMENT=$(echo $FILE| cut -d/ -f4) # 4th file/folder name in the file path
                                  
                                  if [[ $ELEMENT == *"-deprecated.scss"* ]]; then 
                                      ELEMENT=${ELEMENT:1:-16}  # cut -deprecated.scss from file name
                                  fi

                              fi

                              if [[ -z "$ELEMENT" ]]; then
                                  echo "IGNORE: ${FILE} changed"
                                  continue
                              fi

                              if [[ $TAGS == *"$ELEMENT "* ]]; then
                                      continue
                              fi
                              
                              if [[ -z "$TAGS" ]]; then
                                  TAGS="@$ELEMENT "
                              else
                                  TAGS="$TAGS or @$ELEMENT "
                              fi

                          done
                      echo "##vso[task.setvariable variable=tags;isoutput=true]$TAGS"
                  name: check_changes
                  displayName: 'Check changed files'
                - script: echo $(check_changes.tags)
                  name: echoTags
                  displayName: 'Show components to run tests for'
                - bash: |
                      declare BRANCH 
                      BRANCH=$SYSTEM_PULLREQUEST_SOURCEBRANCH
                      echo "##vso[task.setvariable variable=branch;isoutput=true]$SYSTEM_PULLREQUEST_SOURCEBRANCH"
                  name: branch_name

    - stage: safari_functional_tests_legacy
      variables:
          - group: 'Services Credentials'
      displayName: Execute tests for Legacy Components on Safari
      condition: ne(stageDependencies.CheckChanges.outputs['CheckChangesJob.check_changes.tags'], '')
      dependsOn: CheckChanges
      jobs:
          - job: execute_tests
            displayName: Build and run tests on Safari
            timeoutInMinutes: 120
            variables:
                tags: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['check_changes.tags'] ]
                branch: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['branch_name.branch'] ]
            steps:
                - checkout: outsystems-ui-tests
                - template: ./pipelines/templates/build-and-execute-functional-tests-template.yml@outsystems-ui-tests
                  parameters:
                      BROWSER: safari
                      ENVIRONMENT: dev
                      TAGS: not @skipLegacy and not @skipSafari and ($(tags))
                      LEGACY: True
                      MODULE: $(branch)

    - stage: safari_functional_tests
      variables:
          - group: 'Services Credentials'
      displayName: Execute tests on Safari
      condition: ne(stageDependencies.CheckChanges.outputs['CheckChangesJob.check_changes.tags'], '')
      dependsOn:
          - safari_functional_tests_legacy
          - CheckChanges
      jobs:
          - job: execute_tests
            displayName: Build and run tests on Safari
            timeoutInMinutes: 120
            variables:
                tags: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['check_changes.tags'] ]
                branch: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['branch_name.branch'] ]
            steps:
                - checkout: outsystems-ui-tests
                - template: ./pipelines/templates/build-and-execute-functional-tests-template.yml@outsystems-ui-tests
                  parameters:
                      BROWSER: safari
                      ENVIRONMENT: dev
                      TAGS: not @legacy and not @skipSafari and ($(tags))
                      LEGACY: False
                      MODULE: $(branch)

    - stage: chrome_functional_tests_legacy
      variables:
          - group: 'Services Credentials'
      displayName: Execute tests for Legacy Components on Chrome
      condition: ne(stageDependencies.CheckChanges.outputs['CheckChangesJob.check_changes.tags'], '')
      dependsOn: CheckChanges
      jobs:
          - job: execute_tests
            displayName: Build and run tests on Chrome
            timeoutInMinutes: 120
            variables:
                tags: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['check_changes.tags'] ]
                branch: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['branch_name.branch'] ]
            steps:
                - checkout: outsystems-ui-tests
                - template: ./pipelines/templates/build-and-execute-functional-tests-template.yml@outsystems-ui-tests
                  parameters:
                      BROWSER: chrome
                      ENVIRONMENT: dev
                      TAGS: not @skipLegacy and not @skipChrome and ($(tags))
                      LEGACY: True
                      MODULE: $(branch)

    - stage: chrome_functional_tests
      variables:
          - group: 'Services Credentials'
      displayName: Execute tests on Chrome
      condition: ne(stageDependencies.CheckChanges.outputs['CheckChangesJob.check_changes.tags'], '')
      dependsOn:
          - chrome_functional_tests_legacy
          - CheckChanges
      jobs:
          - job: execute_tests
            displayName: Build and run tests on Chrome
            timeoutInMinutes: 120
            variables:
                tags: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['check_changes.tags'] ]
                branch: $[ stageDependencies.CheckChanges.CheckChangesJob.outputs['branch_name.branch'] ]
            steps:
                - checkout: outsystems-ui-tests
                - template: ./pipelines/templates/build-and-execute-functional-tests-template.yml@outsystems-ui-tests
                  parameters:
                      BROWSER: chrome
                      ENVIRONMENT: dev
                      TAGS: not @legacy and not @skipChrome and ($(tags))
                      LEGACY: False
                      MODULE: $(branch)

    - stage: publish_cucumber_results
      displayName: 'Publish cucumber results'
      condition: ne(stageDependencies.CheckChanges.outputs['CheckChangesJob.check_changes.tags'], '')
      dependsOn:
          - safari_functional_tests
          - chrome_functional_tests
      jobs:
          - job: Publish_cucumber_results
            displayName: 'Publish cucumber results'
            steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                      buildType: 'current'
                      itemPattern: '**'
                      targetPath: '$(Pipeline.Workspace)/tmp'
                - script: ls -R $(Pipeline.Workspace)/tmp
                - task: MaciejMaciejewski.azure-pipelines-cucumber.PublishCucumberReport.PublishCucumberReport@1
                  displayName: 'Publish Cucumber Report'
                  inputs:
                      jsonDir: $(Pipeline.Workspace)/tmp
                      outputPath: $(Pipeline.Workspace)/tmp
