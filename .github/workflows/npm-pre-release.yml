name: pre-release

on:
    release:
        types: [prereleased]

jobs:
    run-lint-and-prettier:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: dev

            - uses: actions/setup-node@v3

            - run: npm install
            - run: npm run lintfix
            - run: npm run prettier

    get-tags-versions:
        needs: run-lint-and-prettier
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: dev

            - uses: actions/setup-node@v3

            - name: Get tags versions
              id: get-tags
              uses: JinoArch/get-latest-tag@latest

            - name: Get latest version
              id: split-lts-tag
              uses: jungwinter/split@v2
              with:
                  msg: '${{ steps.get-tags.outputs.latestTag }}'
                  separator: 'v'

            - name: Create version artifact
              shell: bash
              run: |
                  expr ${{ steps.split-lts-tag.outputs._1 }} > new-version-artf.txt

            - name: Store new tag version
              uses: actions/upload-artifact@v3
              with:
                  name: new-version-tag
                  path: new-version-artf.txt
                  retention-days: 1

    update-version:
        needs: get-tags-versions
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: dev

            - uses: actions/setup-node@v3

            - run: npm install

            - name: Get new version artifact
              uses: actions/download-artifact@v3
              with:
                  name: new-version-tag

            - name: Get version var
              id: get-artifact-version
              shell: bash
              run: |
                  value=`cat new-version-artf.txt`
                  echo "version="$value >> $GITHUB_OUTPUT

            - name: Update version from v${{ steps.get-artifact-version.outputs.version }}
              run: npm run gta-update-version ${{ steps.get-artifact-version.outputs.version }}

            - name: Commit updated version
              uses: stefanzweifel/git-auto-commit-action@v4
              with:
                  branch: dev
                  commit_message: Updated version. [skip ci]

    create-rc:
        needs: get-tags-versions
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: dev

            - uses: actions/setup-node@v3

            - name: Get new version artifact
              uses: actions/download-artifact@v3
              with:
                  name: new-version-tag

            - name: Get version var
              id: get-artifact-version
              shell: bash
              run: |
                  value=`cat new-version-artf.txt`
                  echo "version="$value >> $GITHUB_OUTPUT

            - name: Create rc${{ steps.get-artifact-version.outputs.version }}
              shell: bash
              run: |
                  git checkout -b rc${{ steps.get-artifact-version.outputs.version }}
                  git push -u origin rc${{ steps.get-artifact-version.outputs.version }}

    compile-rc:
        needs: create-rc
        runs-on: ubuntu-latest
        steps:
            - uses: actions/setup-node@v3

            - name: Get new version artifact
              uses: actions/download-artifact@v3
              with:
                  name: new-version-tag

            - name: Get version var
              id: get-artifact-version
              shell: bash
              run: |
                  value=`cat new-version-artf.txt`
                  echo "version="$value >> $GITHUB_OUTPUT

            - uses: actions/checkout@v3
              with:
                  ref: rc${{ steps.get-artifact-version.outputs.version }}

            - run: npm install

            - name: Compile Prod
              run: npm run build

            - name: Git Commit
              uses: stefanzweifel/git-auto-commit-action@v4
              with:
                  branch: rc${{ steps.get-artifact-version.outputs.version }}
                  commit_message: Compiled Production Mode [skip ci]

    delete-artifact:
        needs: [update-version, create-rc, compile-rc]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: dev

            - uses: actions/setup-node@v3

            - name: Remove new version artifact
              uses: geekyeggo/delete-artifact@v2
              with:
                  name: new-version-tag
